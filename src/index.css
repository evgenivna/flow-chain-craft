@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Lavender-blue gradients with neon-pink accents */
    --background: 250 50% 10%;
    --foreground: 280 20% 98%;

    --card: 250 40% 14%;
    --card-foreground: 280 20% 98%;

    --popover: 250 40% 12%;
    --popover-foreground: 280 20% 98%;

    --primary: 270 80% 65%;
    --primary-foreground: 0 0% 100%;

    --secondary: 250 30% 20%;
    --secondary-foreground: 280 20% 98%;

    --muted: 250 20% 50%;
    --muted-foreground: 260 15% 65%;

    --accent: 330 90% 70%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 70% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 260 30% 25%;
    --input: 260 30% 20%;
    --ring: 270 80% 65%;

    --radius: 1.5rem;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(260 80% 60%), hsl(280 85% 70%));
    --gradient-accent: linear-gradient(135deg, hsl(320 90% 65%), hsl(340 95% 75%));
    --gradient-canvas: linear-gradient(180deg, hsl(250 50% 10%), hsl(240 60% 15%));
    --gradient-glass: linear-gradient(135deg, hsl(260 40% 18% / 0.6), hsl(260 40% 22% / 0.6));

    /* Glows & Shadows */
    --glow-primary: 0 0 40px hsl(270 80% 65% / 0.5);
    --glow-accent: 0 0 30px hsl(330 90% 70% / 0.6);
    --shadow-glass: 0 8px 32px hsl(250 50% 8% / 0.5);
    --shadow-elevated: 0 20px 60px hsl(250 50% 5% / 0.7);

    /* Node states */
    --node-idle: 260 30% 30%;
    --node-running: 190 85% 55%;
    --node-streaming: 200 90% 65%;
    --node-done: 140 75% 55%;
    --node-error: 0 70% 60%;

    /* Animation timings */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .dark {
    /* Same as root for dark-mode-first design */
    --background: 250 60% 12%;
    --foreground: 280 70% 95%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
    background: var(--gradient-canvas);
  }

  /* Glassmorphism utilities */
  .glass {
    background: var(--gradient-glass);
    -webkit-backdrop-filter: blur(16px);
    backdrop-filter: blur(16px);
    border: 1px solid hsl(260 60% 50% / 0.25);
    box-shadow: var(--shadow-glass);
  }

  .glass-card {
    border-radius: var(--radius);
    padding: 1.5rem;
  }
  
  /* Node card defensive rules */
  .node-card::before,
  .node-card::after {
    background: transparent;
  }

  .glow-primary {
    box-shadow: var(--glow-primary);
  }

  .glow-accent {
    box-shadow: var(--glow-accent);
  }

  /* Animation utilities */
  .animate-gradient {
    background-size: 200% 200%;
    animation: gradient-shift 6s ease infinite;
  }

  @keyframes gradient-shift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  @keyframes token-fade {
    0% { opacity: 0; transform: translateY(8px); }
    50% { opacity: 1; transform: translateY(0); }
    100% { opacity: 0; transform: translateY(-8px); }
  }

  @keyframes pulse-glow {
    0%, 100% { box-shadow: var(--glow-primary); }
    50% { box-shadow: 0 0 60px hsl(270 80% 65% / 0.8); }
  }

  @keyframes rotate-border {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .animate-token {
    animation: token-fade 2s ease-in-out infinite;
  }

  .animate-pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  /* React Flow node cleanup - force transparent backgrounds */
  .react-flow__node,
  .react-flow__node-default,
  .react-flow__node-input,
  .react-flow__node-output,
  .react-flow__node-prompt,
  .react-flow__node-end,
  .react-flow__node-group {
    background: transparent !important;
    background-color: transparent !important;
    border: 0 !important;
    box-shadow: none !important;
    padding: 0 !important;
  }
  
  /* Override any xy-flow default background variables */
  .react-flow__node-input,
  .react-flow__node-default,
  .react-flow__node-output,
  .react-flow__node-group {
    --xy-node-background-color: transparent !important;
    --xy-node-background-color-default: transparent !important;
  }
  
  /* Enhanced handles for mobile */
  .react-flow__handle {
    width: 14px !important;
    height: 14px !important;
    border-width: 3px !important;
    cursor: crosshair !important;
    z-index: 10 !important;
    transition: all 0.2s ease;
  }
  
  .react-flow__handle:hover {
    width: 18px !important;
    height: 18px !important;
  }
  
  .react-flow__handle-connecting {
    background: hsl(var(--primary)) !important;
    box-shadow: 0 0 20px hsl(var(--primary) / 0.6);
  }
  
  .react-flow__handle-valid {
    background: hsl(var(--primary)) !important;
    box-shadow: 0 0 15px hsl(var(--primary) / 0.5);
  }

  /* Edge styling */
  .react-flow__edge-path {
    stroke: hsl(var(--primary));
    stroke-width: 2.5px;
    filter: drop-shadow(0 0 4px hsl(var(--primary) / 0.4));
  }

  /* Keyboard handling for mobile */
  @supports (height: 100dvh) {
    .react-flow__viewport {
      height: 100dvh;
    }
  }
}
